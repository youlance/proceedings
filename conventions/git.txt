git commit messages structure:

    <type>: <description>

    [optional body]

    [optional footer(s)]

---------------------------------------------------------------------------------
<type> can be one of these:

feat – a new feature is introduced with the changes
fix – a bug fix has occurred
chore – changes that do not relate to a fix or feature and don't modify src or test files (for example updating dependencies)
refactor – refactored code that neither fixes a bug nor adds a feature
docs – updates to documentation such as a the README or other markdown files
style – changes that do not affect the meaning of the code, likely related to code formatting such as white-space, missing semi-colons, and so on.
test – including new or correcting previous tests
perf – performance improvements
ci – continuous integration related
build – changes that affect the build system or external dependencies
revert – reverts a previous commit

---------------------------------------------------------------------------------

example:

git commit -m "fix: fix array out of bound bug" -m "fixed the out of bound access to the users array"
